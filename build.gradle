// Copyright by Barry G. Becker, 2013. Licensed under MIT License: http://www.opensource.org/licenses/MIT
plugins {
    id "com.github.maiflai.scalatest" version "0.14" // needed to run scala tests
}
description = 'A collection of java simulations.'
group = 'com.barrybecker4'
version = '1.5-SNAPSHOT'
apply from: 'https://raw.github.com/barrybecker4/bb4-common/master/bb4.gradle'
project.archivesBaseName = 'bb4-simulation'
mainClassName = "com.barrybecker4.simulation.dice.DiceSimulator"

// This is needed for when java depends on scala. Remove when fully ported to scala.
//sourceSets.main.scala.srcDir "source"
//sourceSets.main.java.srcDirs = []


dependencies {
    def javaHome = System.properties.'java.home'
    compile fileTree(dir: "${javaHome}/../jre/lib", include: 'javaws.jar')       // for 1.7+

    compile 'org.scala-lang.modules:scala-parser-combinators_2.12:1.0.4'
    compile 'com.barrybecker4:bb4-sound:1.5-SNAPSHOT'
    compile 'com.barrybecker4:bb4-optimization:1.5-SNAPSHOT'
}

task runDice(type: JavaExec, description: "Run dice simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.dice.DiceSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runGraphing(type: JavaExec, description: "Run Graphing simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.graphing.GraphSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runParameters(type: JavaExec, description: "Run Parameter simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.parameter.ParameterSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runPredPrey(type: JavaExec, description: "Run Predator Prey Simulation") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.predprey.PredPreySimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runFluid(type: JavaExec, description: "Run fluid dynamics simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.fluid.ui.FluidSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runSnake(type: JavaExec, description: "Run snake movement simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.snake.SnakeSimulator"]
    classpath = sourceSets.main.runtimeClasspath
    enableAssertions = true
}

task runStock(type: JavaExec, description: "Run stock invetment simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.stock.StockSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runTrading(type: JavaExec, description: "Run stock trading simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.trading.TradingSimulator"]
    classpath = sourceSets.main.runtimeClasspath
    enableAssertions = true
}

task runReactionDiffusion(type: JavaExec, description: "Run reaction diffusion simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.reactiondiffusion.RDSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runFractalExplorer(type: JavaExec, description: "Run (scala) fractal explorer simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.fractalexplorer.FractalExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runHenonPhaseExplorer(type: JavaExec, description: "Run henon phase simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.henonphase.HenonPhaseExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runHabitatExplorer(type: JavaExec, description: "Run animal habitat simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.habitat.HabitatSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runLSystemExplorer(type: JavaExec, description: "Run l-system tree simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.lsystem.LSystemExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runCaveExplorer(type: JavaExec, description: "Run cave simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.cave.CaveExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runConwayExplorer(type: JavaExec, description: "Run Conway's game of life simulator", group: "Run") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.conway.ConwayExplorer"]
    classpath = sourceSets.main.runtimeClasspath
}

task runLiquid(type: JavaExec, description: "Run liquid simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.liquid.LiquidSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runTrebuchet(type: JavaExec, description: "Run treduchet simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.trebuchet.TrebuchetSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

task runVerhulst(type: JavaExec, description: "Run Verhulst population simulator") {
    group = 'application'
    main = 'com.barrybecker4.simulation.common.ui.SimulatorApplet'
    args = ["-panel_class", "com.barrybecker4.simulation.verhulst.VerhulstSimulator"]
    classpath = sourceSets.main.runtimeClasspath
}

ext.appMap = new LinkedHashMap()
appMap.put('simulation', [include:['com/barrybecker4/simulation/common/**', 'com/barrybecker4/simulation/graphing/**']])
appMap.put('dice',       [include:['com/barrybecker4/simulation/dice/**']])
appMap.put('fluid',      [include:['com/barrybecker4/simulation/fluid/**']])
appMap.put('fractalexplorer1', [include:['com/barrybecker4/simulation/fractalexplorer1/**']])
appMap.put('habitat',    [include:['com/barrybecker4/simulation/habitat/**']])
appMap.put('henonexplorer', [include:['com/barrybecker4/simulation/henonphase/**']])
appMap.put('cave', [include:['com/barrybecker4/simulation/cave/**']])
appMap.put('conway', [include:['com/barrybecker4/simulation/conway/**']])
appMap.put('liquid',     [include:['com/barrybecker4/simulation/liquid/**']])
appMap.put('lsystem',    [include:['com/barrybecker4/simulation/lsystem/**']])
appMap.put('predprey',   [include:['com/barrybecker4/simulation/predprey/**']])
appMap.put('reactiondiffusion', [include:['com/barrybecker4/simulation/reactiondiffusion/**']])
appMap.put('snake',      [include:['com/barrybecker4/simulation/snake/**']])
appMap.put('stock',      [include:['com/barrybecker4/simulation/stock/**']])
appMap.put('trading',    [include:['com/barrybecker4/simulation/trading/**']])
appMap.put('trebuchet',  [include:['com/barrybecker4/simulation/trebuchet/**']])
appMap.put('verhulst',   [include:['com/barrybecker4/simulation/verhulst/**']])

apply from: 'https://raw.github.com/barrybecker4/bb4-common/master/bb4-publish.gradle'
